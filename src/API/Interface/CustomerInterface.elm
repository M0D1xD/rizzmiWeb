-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module API.Interface.CustomerInterface exposing (..)

import API.InputObject
import API.Interface
import API.Object
import API.Scalar
import API.ScalarCodecs
import API.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (FragmentSelectionSet(..), SelectionSet(..))
import Json.Decode as Decode


type alias Fragments decodesTo =
    { onCustomer : SelectionSet decodesTo API.Object.Customer
    }


{-| Build an exhaustive selection of type-specific fragments.
-}
fragments :
    Fragments decodesTo
    -> SelectionSet decodesTo API.Interface.CustomerInterface
fragments selections =
    Object.exhuastiveFragmentSelection
        [ Object.buildFragment "Customer" selections.onCustomer
        ]


{-| Can be used to create a non-exhuastive set of fragments by using the record
update syntax to add `SelectionSet`s for the types you want to handle.
-}
maybeFragments : Fragments (Maybe decodesTo)
maybeFragments =
    { onCustomer = Graphql.SelectionSet.empty |> Graphql.SelectionSet.map (\_ -> Nothing)
    }


id : SelectionSet API.ScalarCodecs.Id API.Interface.CustomerInterface
id =
    Object.selectionForField "ScalarCodecs.Id" "Id" [] (API.ScalarCodecs.codecs |> API.Scalar.unwrapCodecs |> .codecId |> .decoder)


creationDate : SelectionSet API.ScalarCodecs.DateTime API.Interface.CustomerInterface
creationDate =
    Object.selectionForField "ScalarCodecs.DateTime" "creationDate" [] (API.ScalarCodecs.codecs |> API.Scalar.unwrapCodecs |> .codecDateTime |> .decoder)


modifiedDate : SelectionSet API.ScalarCodecs.DateTime API.Interface.CustomerInterface
modifiedDate =
    Object.selectionForField "ScalarCodecs.DateTime" "modifiedDate" [] (API.ScalarCodecs.codecs |> API.Scalar.unwrapCodecs |> .codecDateTime |> .decoder)


firstName : SelectionSet (Maybe String) API.Interface.CustomerInterface
firstName =
    Object.selectionForField "(Maybe String)" "firstName" [] (Decode.string |> Decode.nullable)


lastName : SelectionSet (Maybe String) API.Interface.CustomerInterface
lastName =
    Object.selectionForField "(Maybe String)" "lastName" [] (Decode.string |> Decode.nullable)


email : SelectionSet (Maybe String) API.Interface.CustomerInterface
email =
    Object.selectionForField "(Maybe String)" "email" [] (Decode.string |> Decode.nullable)


phoneNumber : SelectionSet (Maybe String) API.Interface.CustomerInterface
phoneNumber =
    Object.selectionForField "(Maybe String)" "phoneNumber" [] (Decode.string |> Decode.nullable)


company : SelectionSet (Maybe API.ScalarCodecs.Id) API.Interface.CustomerInterface
company =
    Object.selectionForField "(Maybe ScalarCodecs.Id)" "company" [] (API.ScalarCodecs.codecs |> API.Scalar.unwrapCodecs |> .codecId |> .decoder |> Decode.nullable)


source : SelectionSet (Maybe API.ScalarCodecs.Id) API.Interface.CustomerInterface
source =
    Object.selectionForField "(Maybe ScalarCodecs.Id)" "source" [] (API.ScalarCodecs.codecs |> API.Scalar.unwrapCodecs |> .codecId |> .decoder |> Decode.nullable)
